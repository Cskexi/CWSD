{"ast":null,"code":"import { dictypeAddOrUpdate } from \"@/api/modules/dictype\";\nconst validateTelephone = (rule, value, callback) => {\n  let reg = /^[1][3,4,5,7,8][0-9]{9}$/;\n  if (!reg.test(value)) {\n    callback(new Error(\"手机号格式错误\"));\n  } else {\n    callback();\n  }\n};\nexport default {\n  name: \"addOrEdit\",\n  props: {\n    visible: {\n      type: Boolean,\n      default: false\n    },\n    title: {\n      type: String,\n      default: \"新增\"\n    },\n    defaultFormDate: {\n      type: Object\n    }\n  },\n  data() {\n    return {\n      flag: false,\n      form: {\n        name: '',\n        value: ''\n      },\n      rules: {\n        //     name:[{required:true,message:\"字典类型不能为空\"},\n        //     {type:\"email\",message:\"邮箱格式不正确\"}\n        // ],\n        //     value:[{required:true,message:\"字典类型值不能为空\",trigger:\"blur\"},\n        //      {validator:validateTelephone,trigger:\"blur\"}],\n      }\n    };\n  },\n  mounted() {\n    if (JSON.stringify(this.defaultFormDate) == \"{}\") {\n      this.flag = false;\n    } else {\n      this.form = JSON.parse(JSON.stringify(this.defaultFormDate));\n      console.log(this.form);\n      this.flag = true;\n    }\n  },\n  methods: {\n    close() {\n      this.flag = false;\n      this.$emit(\"close\", this.flag);\n    },\n    submit() {\n      this.$refs.form.validate(valid => {\n        if (valid) {\n          dictypeAddOrUpdate({\n            ...this.form\n          }).then(res => {\n            this.flag = true;\n            this.$emit(\"close\", this.flag);\n          }).catch(err => {\n            this.flag = false;\n            this.$emit(\"close\", this.flag);\n          });\n        }\n      });\n    }\n  }\n};","map":{"version":3,"names":["dictypeAddOrUpdate","validateTelephone","rule","value","callback","reg","test","Error","name","props","visible","type","Boolean","default","title","String","defaultFormDate","Object","data","flag","form","rules","mounted","JSON","stringify","parse","console","log","methods","close","$emit","submit","$refs","validate","valid","then","res","catch","err"],"sources":["src/views/dictype/module/addOrEdit.vue"],"sourcesContent":["<template>\r\n    <el-dialog :title=\"title\" :visible=\"visible\" :before-close=\"close\">\r\n        <el-form :model=\"form\" :rules=\"rules\" ref=\"form\">\r\n           <el-form-item label=\"字典类型名称\" prop=\"name\">\r\n                <el-input v-model=\"form.name\" autocomplete=\"off\"></el-input>\r\n           </el-form-item> \r\n           <el-form-item label=\"字典类型值\" prop=\"value\">\r\n                <el-input v-model=\"form.value\" autocomplete=\"off\"></el-input>\r\n           </el-form-item> \r\n        </el-form>\r\n\r\n        <div slot=\"footer\" class=\"dialog-footer\">\r\n            <el-button @click=\"close = false\">取 消</el-button>\r\n            <el-button type=\"primary\" @click=\"submit\">确 定</el-button>\r\n        </div>\r\n</el-dialog>\r\n</template>    \r\n\r\n<script>\r\nimport {dictypeAddOrUpdate} from \"@/api/modules/dictype\"\r\n\r\nconst validateTelephone = (rule,value,callback)=>{\r\n    let reg = /^[1][3,4,5,7,8][0-9]{9}$/;\r\n    if(!reg.test(value)){\r\n        callback(new Error(\"手机号格式错误\"));\r\n\r\n    }else{\r\n        callback();\r\n    }\r\n}\r\n\r\n  export default {\r\n    name:\"addOrEdit\",\r\n    props:{\r\n        visible:{\r\n            type:Boolean,\r\n            default:false\r\n        }, \r\n        title:{\r\n            type:String,\r\n            default:\"新增\"\r\n        },\r\n        defaultFormDate:{\r\n            type:Object,\r\n        },\r\n    },\r\n    data() {\r\n      return {\r\n        flag:false,\r\n        form:{\r\n            name:'',\r\n            value:''\r\n        },\r\n        rules:{\r\n        //     name:[{required:true,message:\"字典类型不能为空\"},\r\n        //     {type:\"email\",message:\"邮箱格式不正确\"}\r\n        // ],\r\n        //     value:[{required:true,message:\"字典类型值不能为空\",trigger:\"blur\"},\r\n        //      {validator:validateTelephone,trigger:\"blur\"}],\r\n        }\r\n      };\r\n    },\r\n    mounted(){\r\n        if(JSON.stringify(this.defaultFormDate)==\"{}\"){\r\n            this.flag = false\r\n        }else{\r\n            this.form = JSON.parse(JSON.stringify(this.defaultFormDate))\r\n            console.log(this.form)\r\n            this.flag =true;\r\n        }\r\n    },\r\n    methods: {\r\n      close() {\r\n        this.flag = false;\r\n        this.$emit(\"close\",this.flag)\r\n      },\r\n      submit(){\r\n        this.$refs.form.validate(valid=>{\r\n            if(valid){\r\n                dictypeAddOrUpdate({\r\n                ...this.form\r\n            }).then(res=>{\r\n                this.flag = true\r\n                this.$emit(\"close\",this.flag)\r\n            })\r\n            .catch(err=>{\r\n                this.flag = false\r\n                this.$emit(\"close\",this.flag)\r\n            })\r\n            }\r\n               \r\n        })\r\n        \r\n      }\r\n    }\r\n  };\r\n</script>"],"mappings":"AAmBA,SAAAA,kBAAA;AAEA,MAAAC,iBAAA,GAAAA,CAAAC,IAAA,EAAAC,KAAA,EAAAC,QAAA;EACA,IAAAC,GAAA;EACA,KAAAA,GAAA,CAAAC,IAAA,CAAAH,KAAA;IACAC,QAAA,KAAAG,KAAA;EAEA;IACAH,QAAA;EACA;AACA;AAEA;EACAI,IAAA;EACAC,KAAA;IACAC,OAAA;MACAC,IAAA,EAAAC,OAAA;MACAC,OAAA;IACA;IACAC,KAAA;MACAH,IAAA,EAAAI,MAAA;MACAF,OAAA;IACA;IACAG,eAAA;MACAL,IAAA,EAAAM;IACA;EACA;EACAC,KAAA;IACA;MACAC,IAAA;MACAC,IAAA;QACAZ,IAAA;QACAL,KAAA;MACA;MACAkB,KAAA;QACA;QACA;QACA;QACA;QACA;MAAA;IAEA;EACA;EACAC,QAAA;IACA,IAAAC,IAAA,CAAAC,SAAA,MAAAR,eAAA;MACA,KAAAG,IAAA;IACA;MACA,KAAAC,IAAA,GAAAG,IAAA,CAAAE,KAAA,CAAAF,IAAA,CAAAC,SAAA,MAAAR,eAAA;MACAU,OAAA,CAAAC,GAAA,MAAAP,IAAA;MACA,KAAAD,IAAA;IACA;EACA;EACAS,OAAA;IACAC,MAAA;MACA,KAAAV,IAAA;MACA,KAAAW,KAAA,eAAAX,IAAA;IACA;IACAY,OAAA;MACA,KAAAC,KAAA,CAAAZ,IAAA,CAAAa,QAAA,CAAAC,KAAA;QACA,IAAAA,KAAA;UACAlC,kBAAA;YACA,QAAAoB;UACA,GAAAe,IAAA,CAAAC,GAAA;YACA,KAAAjB,IAAA;YACA,KAAAW,KAAA,eAAAX,IAAA;UACA,GACAkB,KAAA,CAAAC,GAAA;YACA,KAAAnB,IAAA;YACA,KAAAW,KAAA,eAAAX,IAAA;UACA;QACA;MAEA;IAEA;EACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}