{"ast":null,"code":"import axios from \"axios\";\nimport qs from \"qs\";\nimport { getStore } from \"@/utils/storage\";\naxios.defaults.baseURL = \"/api\";\naxios.interceptors.response.use(res => {\n  //respose 200 正常返回\n  var result = res.data;\n  var code = result.statusCode;\n  switch (code) {\n    case '200':\n      {\n        return Promise.resolve(result);\n      }\n      ;\n    case '400':\n      {\n        return Promise.reject(result.message);\n      }\n      ;\n    case '401':\n      {\n        return Promise.reject(\"权限不足\");\n      }\n      ;\n    case '404':\n      {\n        return Promise.reject(\"接口不存在\");\n      }\n      ;\n    default:\n      {}\n  }\n}, err => {\n  //respose 出错了\n  return Promise.reject(err);\n});\nexport function get(url, params) {\n  var token = getStore(\"token\");\n  return axios({\n    method: 'get',\n    url: `${url}`,\n    params: params,\n    headers: {\n      'token': token\n    }\n  });\n}\nexport function post(url, params) {\n  var token = getStore(\"token\");\n  return axios({\n    method: 'post',\n    url: `${url}`,\n    params: params,\n    transformRequest: [function (data) {\n      return qs.stringify(data, {\n        allowDots: true\n      });\n    }],\n    headers: {\n      'token': token,\n      'Content-Type': 'application/x-www-from-urlencoded'\n    }\n  });\n}\nexport function postJson(url, params) {\n  var token = getStore(\"token\");\n  return axios({\n    method: 'post',\n    url: `${url}`,\n    data: params,\n    headers: {\n      'token': token,\n      'Content-Type': 'application/json'\n    }\n  });\n}\nexport function postt(url, params) {\n  var token = getStore(\"token\");\n  return axios({\n    method: 'post',\n    url: `${url}`,\n    data: params,\n    transformRequest: [data => data],\n    // 不再使用 qs 库进行参数序列化，直接传递 FormData\n    headers: {\n      'token': token,\n      'Content-Type': 'multipart/form-data'\n    }\n  });\n}","map":{"version":3,"names":["axios","qs","getStore","defaults","baseURL","interceptors","response","use","res","result","data","code","statusCode","Promise","resolve","reject","message","err","get","url","params","token","method","headers","post","transformRequest","stringify","allowDots","postJson","postt"],"sources":["D:/User/Workspace/CWSD/cwsd-web/src/api/axios.js"],"sourcesContent":["import axios from \"axios\"\r\nimport qs from \"qs\"\r\nimport { getStore } from \"@/utils/storage\";\r\naxios.defaults.baseURL=\"/api\";\r\n\r\naxios.interceptors.response.use(res=>{\r\n    //respose 200 正常返回\r\n    var result = res.data;\r\n    var code = result.statusCode; \r\n    switch(code){\r\n      case '200':{\r\n        return Promise.resolve(result)\r\n      };\r\n      case '400':{\r\n        return Promise.reject(result.message);\r\n      };\r\n      case '401':{\r\n        return Promise.reject(\"权限不足\");\r\n      };\r\n      case '404':{\r\n        return Promise.reject(\"接口不存在\");\r\n      };\r\n      default:{\r\n        \r\n      }\r\n    } \r\n},err=>{\r\n    //respose 出错了\r\n    return Promise.reject(err)\r\n})\r\nexport function get(url,params){\r\n    var token = getStore(\"token\")\r\n    return axios({\r\n        method:'get',\r\n        url:`${url}`,\r\n        params:params,\r\n        headers:{\r\n            'token':token\r\n        }\r\n    })\r\n}\r\n\r\nexport function post(url,params){\r\n    var token = getStore(\"token\")\r\n    return axios({\r\n        method:'post',\r\n        url:`${url}`,\r\n        params:params,\r\n        transformRequest:[function(data){\r\n            return qs.stringify(data,{allowDots:true})\r\n        }], \r\n        headers:{\r\n            'token':token,\r\n            'Content-Type':'application/x-www-from-urlencoded'\r\n        }\r\n    })\r\n}\r\n\r\n\r\nexport function postJson(url,params){\r\n    var token = getStore(\"token\")\r\n    return axios({\r\n        method:'post',\r\n        url:`${url}`,\r\n        data:params,\r\n        headers:{\r\n            'token':token,\r\n            'Content-Type':'application/json'\r\n        }\r\n    })\r\n}\r\n\r\n\r\n\r\nexport function postt(url,params){\r\n    var token = getStore(\"token\")\r\n    return axios({\r\n        method:'post',\r\n        url:`${url}`,\r\n        data:params,\r\n        transformRequest: [(data) => data], // 不再使用 qs 库进行参数序列化，直接传递 FormData\r\n        headers:{\r\n            'token':token,\r\n            'Content-Type': 'multipart/form-data',\r\n        }\r\n    })\r\n}"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,EAAE,MAAM,IAAI;AACnB,SAASC,QAAQ,QAAQ,iBAAiB;AAC1CF,KAAK,CAACG,QAAQ,CAACC,OAAO,GAAC,MAAM;AAE7BJ,KAAK,CAACK,YAAY,CAACC,QAAQ,CAACC,GAAG,CAACC,GAAG,IAAE;EACjC;EACA,IAAIC,MAAM,GAAGD,GAAG,CAACE,IAAI;EACrB,IAAIC,IAAI,GAAGF,MAAM,CAACG,UAAU;EAC5B,QAAOD,IAAI;IACT,KAAK,KAAK;MAAC;QACT,OAAOE,OAAO,CAACC,OAAO,CAACL,MAAM,CAAC;MAChC;MAAC;IACD,KAAK,KAAK;MAAC;QACT,OAAOI,OAAO,CAACE,MAAM,CAACN,MAAM,CAACO,OAAO,CAAC;MACvC;MAAC;IACD,KAAK,KAAK;MAAC;QACT,OAAOH,OAAO,CAACE,MAAM,CAAC,MAAM,CAAC;MAC/B;MAAC;IACD,KAAK,KAAK;MAAC;QACT,OAAOF,OAAO,CAACE,MAAM,CAAC,OAAO,CAAC;MAChC;MAAC;IACD;MAAQ,CAER;EACF;AACJ,CAAC,EAACE,GAAG,IAAE;EACH;EACA,OAAOJ,OAAO,CAACE,MAAM,CAACE,GAAG,CAAC;AAC9B,CAAC,CAAC;AACF,OAAO,SAASC,GAAGA,CAACC,GAAG,EAACC,MAAM,EAAC;EAC3B,IAAIC,KAAK,GAAGnB,QAAQ,CAAC,OAAO,CAAC;EAC7B,OAAOF,KAAK,CAAC;IACTsB,MAAM,EAAC,KAAK;IACZH,GAAG,EAAE,GAAEA,GAAI,EAAC;IACZC,MAAM,EAACA,MAAM;IACbG,OAAO,EAAC;MACJ,OAAO,EAACF;IACZ;EACJ,CAAC,CAAC;AACN;AAEA,OAAO,SAASG,IAAIA,CAACL,GAAG,EAACC,MAAM,EAAC;EAC5B,IAAIC,KAAK,GAAGnB,QAAQ,CAAC,OAAO,CAAC;EAC7B,OAAOF,KAAK,CAAC;IACTsB,MAAM,EAAC,MAAM;IACbH,GAAG,EAAE,GAAEA,GAAI,EAAC;IACZC,MAAM,EAACA,MAAM;IACbK,gBAAgB,EAAC,CAAC,UAASf,IAAI,EAAC;MAC5B,OAAOT,EAAE,CAACyB,SAAS,CAAChB,IAAI,EAAC;QAACiB,SAAS,EAAC;MAAI,CAAC,CAAC;IAC9C,CAAC,CAAC;IACFJ,OAAO,EAAC;MACJ,OAAO,EAACF,KAAK;MACb,cAAc,EAAC;IACnB;EACJ,CAAC,CAAC;AACN;AAGA,OAAO,SAASO,QAAQA,CAACT,GAAG,EAACC,MAAM,EAAC;EAChC,IAAIC,KAAK,GAAGnB,QAAQ,CAAC,OAAO,CAAC;EAC7B,OAAOF,KAAK,CAAC;IACTsB,MAAM,EAAC,MAAM;IACbH,GAAG,EAAE,GAAEA,GAAI,EAAC;IACZT,IAAI,EAACU,MAAM;IACXG,OAAO,EAAC;MACJ,OAAO,EAACF,KAAK;MACb,cAAc,EAAC;IACnB;EACJ,CAAC,CAAC;AACN;AAIA,OAAO,SAASQ,KAAKA,CAACV,GAAG,EAACC,MAAM,EAAC;EAC7B,IAAIC,KAAK,GAAGnB,QAAQ,CAAC,OAAO,CAAC;EAC7B,OAAOF,KAAK,CAAC;IACTsB,MAAM,EAAC,MAAM;IACbH,GAAG,EAAE,GAAEA,GAAI,EAAC;IACZT,IAAI,EAACU,MAAM;IACXK,gBAAgB,EAAE,CAAEf,IAAI,IAAKA,IAAI,CAAC;IAAE;IACpCa,OAAO,EAAC;MACJ,OAAO,EAACF,KAAK;MACb,cAAc,EAAE;IACpB;EACJ,CAAC,CAAC;AACN","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}