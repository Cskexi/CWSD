{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport VideoPlayer from '@/views/monitor/components/VideoPlayer.vue';\nimport { list } from \"@/api/modules/notice\";\nimport { dictypeList } from \"@/api/modules/dictype\";\nimport { dicPage } from \"@/api/modules/dic\";\nimport { monitorList } from \"@/api/modules/monitor\";\nimport { equipmentList, dataChange } from \"@/api/modules/equipment\";\nimport { save } from \"@/api/modules/notice\";\nexport default {\n  name: 'home',\n  components: {\n    VideoPlayer\n  },\n  data() {\n    return {\n      NoticeData: [],\n      searchForm: {\n        pageNum: 1,\n        pageSize: 10,\n        dictypeId: \"\"\n      },\n      videos: [],\n      equipmentData: [],\n      noticeForm: {\n        reason: \"\",\n        equipmentId: \"\"\n      },\n      equipmentName: []\n    };\n  },\n  mounted() {\n    this.loadMonitor();\n    this.loadEquipmemt();\n    this.loadNoticeData();\n    this.timer = setInterval(() => this.updateData(), 60000); // 每5秒更新一次数据\n  },\n  beforeDestroy() {\n    clearInterval(this.timer);\n  },\n  methods: {\n    updateData() {\n      this.loadEquipmemt();\n      this.loadNoticeData();\n    },\n    getTextColor(item) {\n      // 假设你希望当item.value大于100时字体颜色为红色\n      if (parseInt(item.value) >= parseInt(item.cordon)) return {\n        color: 'red'\n      };else {\n        return {\n          color: 'black'\n        };\n      }\n    },\n    loadEquipmemt() {\n      let temp = [];\n      dataChange();\n      dictypeList({\n        name: \"传感器\"\n      }).then(result => {\n        this.searchForm.dictypeId = result.data[0].id;\n        if (this.searchForm.dictypeId) {\n          console.log(this.searchForm.dictypeId);\n          dicPage({\n            ...this.searchForm\n          }).then(result => {\n            result.data.records.forEach(item => {\n              equipmentList({\n                name: item.name\n              }).then(result => {\n                console.log(result);\n                temp.push(result.data[0]);\n                var temp2 = result.data[0];\n                console.log(temp2);\n                if (parseInt(temp2.value) >= parseInt(temp2.cordon)) {\n                  this.noticeForm.equipmentId = temp2.id;\n                  this.noticeForm.reason = \"警告：\" + \"当前\" + temp2.name + \"数值已达到\" + temp2.value + temp2.flats;\n                  save({\n                    ...this.noticeForm\n                  }).then(result => {});\n                }\n              });\n            });\n            this.equipmentData = temp;\n            console.log(this.equipmentData);\n          }).catch(err => {\n            // 移除多余的 catch 块\n            console.log(\"error:\" + err);\n          });\n        }\n      }).catch(err => {\n        console.log(\"error:\" + err);\n      });\n    },\n    sendNotice(a) {\n      a.forEach(item => {\n        console.log(item);\n        if (parseInt(item.value) >= parseInt(item.cordon)) {\n          this.noticeForm.equipmentId = item.id;\n          this.noticeForm.reason = \"警告：\" + \"当前\" + item.name + \"数值已达到\" + item.value + item.flats;\n          save({\n            ...this.noticeForm\n          }).then(result => {\n            console.log(result);\n          });\n        }\n      });\n    },\n    loadMonitor() {\n      dictypeList({\n        name: \"监控器\"\n      }).then(result => {\n        this.searchForm.dictypeId = result.data[0].id;\n        dicPage({\n          ...this.searchForm\n        }).then(result => {\n          result.data.records.forEach(item => {\n            monitorList({\n              name: item.name\n            }).then(result => {\n              this.videos.push(result.data[0]);\n            });\n          });\n        }).catch(err => {\n          console.log(\"error:\" + err);\n        });\n      }).catch(err => {\n        console.log(\"error:\" + err);\n      });\n    },\n    ToNotice() {\n      this.$router.push('/message'); // 登录成功，跳转到主页\n    },\n    loadNoticeData() {\n      list({\n        state: \"0\"\n      }).then(result => {\n        this.NoticeData = result.data;\n      }).catch(err => {\n        console.log(\"error:\" + err);\n      });\n    }\n\n    // loadEquipmemt() {\n    //   // 从后端获取视频数据，这里只是示例，实际情况需要根据后端API进行调整\n    //   dataChange();\n    //   equipmentList({ ...this.form }).then(result => {\n    //     this.equipmentData = result.data;\n    //     this.sendNotice(this.equipmentData);\n    //   })\n    // },\n  }\n};","map":{"version":3,"names":["VideoPlayer","list","dictypeList","dicPage","monitorList","equipmentList","dataChange","save","name","components","data","NoticeData","searchForm","pageNum","pageSize","dictypeId","videos","equipmentData","noticeForm","reason","equipmentId","equipmentName","mounted","loadMonitor","loadEquipmemt","loadNoticeData","timer","setInterval","updateData","beforeDestroy","clearInterval","methods","getTextColor","item","parseInt","value","cordon","color","temp","then","result","id","console","log","records","forEach","push","temp2","flats","catch","err","sendNotice","a","ToNotice","$router","state"],"sources":["src/views/home/index.vue"],"sourcesContent":["<template>\r\n  <div class=\"site-wrapper\">\r\n    <h2>当前待处理消息</h2>\r\n    <el-table :data=\"NoticeData\" style=\"width: 100%; margin-bottom: 20px;\">\r\n      <el-table-column label=\"时间\" prop=\"time\"></el-table-column>\r\n      <el-table-column label=\"通知说明\" prop=\"reason\"></el-table-column>\r\n    </el-table>\r\n    <el-col>\r\n      <el-button type=\"primary\" @click=\"ToNotice()\" style=\" float:right;\">去处理</el-button>\r\n    </el-col>\r\n    <h2>视频监控</h2>\r\n    <el-row :gutter=\"24\" style=\"text-align:center\">\r\n      <el-col :span=12 v-for=\"video in videos\" :key=\"video.id\">\r\n        <video-player :video=\"video\" />\r\n        <h2>{{ video.name }}</h2>\r\n      </el-col>\r\n    </el-row>\r\n\r\n    <h2>传感器设备</h2>\r\n\r\n    <el-row :gutter=\"24\">\r\n\r\n      <el-col :span=\"6\" v-for=\"item in  equipmentData\" :key=\"item.id\">\r\n        <el-card>\r\n          <div class=\"monitoring-item\">\r\n            <h3>{{ item.name }}</h3>\r\n            <p class=\"value\" :style=\"getTextColor(item)\">{{ item.value }}{{ item.flats }}</p>\r\n          </div>\r\n        </el-card>\r\n      </el-col>\r\n\r\n    </el-row>\r\n  </div>\r\n</template>\r\n  \r\n<script>\r\nimport VideoPlayer from '@/views/monitor/components/VideoPlayer.vue';\r\nimport { list } from \"@/api/modules/notice\"\r\nimport { dictypeList } from \"@/api/modules/dictype\"\r\nimport { dicPage } from \"@/api/modules/dic\"\r\nimport { monitorList } from \"@/api/modules/monitor\"\r\nimport { equipmentList, dataChange } from \"@/api/modules/equipment\"\r\nimport { save } from \"@/api/modules/notice\"\r\n\r\nexport default {\r\n  name: 'home',\r\n  components: {\r\n    VideoPlayer,\r\n  },\r\n  data() {\r\n    return {\r\n      NoticeData: [],\r\n      searchForm: {\r\n        pageNum: 1,\r\n        pageSize: 10,\r\n        dictypeId: \"\",\r\n      },\r\n      videos: [],\r\n      equipmentData: [],\r\n      noticeForm: {\r\n        reason: \"\",\r\n        equipmentId: \"\",\r\n      },\r\n      equipmentName: [],\r\n    }\r\n  },\r\n  mounted() {\r\n\r\n\r\n    this.loadMonitor()\r\n    this.loadEquipmemt()\r\n    this.loadNoticeData()\r\n    this.timer = setInterval(() => this.updateData(), 60000); // 每5秒更新一次数据\r\n  },\r\n  beforeDestroy() {\r\n    clearInterval(this.timer);\r\n  },\r\n  methods: {\r\n    updateData() {\r\n      this.loadEquipmemt()\r\n      this.loadNoticeData()\r\n    },\r\n    getTextColor(item) {\r\n      // 假设你希望当item.value大于100时字体颜色为红色\r\n      if (parseInt(item.value) >= parseInt(item.cordon))\r\n        return { color: 'red' }\r\n      else {\r\n        return { color: 'black' };\r\n      }\r\n    },\r\n    loadEquipmemt() {\r\n      let temp = [];\r\n      dataChange();\r\n\r\n\r\n      dictypeList({ name: \"传感器\" }).then(result => {\r\n        this.searchForm.dictypeId = result.data[0].id;\r\n        if (this.searchForm.dictypeId) {\r\n          console.log(this.searchForm.dictypeId)\r\n          dicPage({ ...this.searchForm }).then(result => {\r\n            result.data.records.forEach(item => {\r\n              equipmentList({ name: item.name }).then(result => {\r\n                console.log(result)\r\n                temp.push(result.data[0])\r\n                var temp2 = result.data[0];\r\n                console.log(temp2);\r\n                if (parseInt(temp2.value) >= parseInt(temp2.cordon)) {\r\n                  this.noticeForm.equipmentId = temp2.id;\r\n                  this.noticeForm.reason = \"警告：\" + \"当前\" + temp2.name + \"数值已达到\" + temp2.value + temp2.flats;\r\n                  save({ ...this.noticeForm }).then(result => {\r\n                  })\r\n                }\r\n              })\r\n\r\n            });\r\n            this.equipmentData = temp;\r\n            console.log(this.equipmentData)\r\n          }).catch(err => { // 移除多余的 catch 块\r\n            console.log(\"error:\" + err)\r\n          })\r\n\r\n        }\r\n\r\n      }).catch(err => {\r\n        console.log(\"error:\" + err)\r\n      })\r\n    },\r\n\r\n    sendNotice(a) {\r\n      a.forEach(item => {\r\n        console.log(item)\r\n        if (parseInt(item.value) >= parseInt(item.cordon)) {\r\n          this.noticeForm.equipmentId = item.id;\r\n          this.noticeForm.reason = \"警告：\" + \"当前\" + item.name + \"数值已达到\" + item.value + item.flats;\r\n          save({ ...this.noticeForm }).then(result => {\r\n            console.log(result)\r\n          })\r\n        }\r\n      })\r\n    },\r\n\r\n    loadMonitor() {\r\n      dictypeList({ name: \"监控器\" }).then(result => {\r\n        this.searchForm.dictypeId = result.data[0].id;\r\n        dicPage({ ...this.searchForm }).then(result => {\r\n          result.data.records.forEach(item => {\r\n            monitorList({ name: item.name }).then(result => {\r\n              this.videos.push(result.data[0])\r\n            })\r\n          })\r\n        }).catch(err => {\r\n          console.log(\"error:\" + err)\r\n        })\r\n      }).catch(err => {\r\n        console.log(\"error:\" + err)\r\n      })\r\n    },\r\n\r\n\r\n    ToNotice() {\r\n      this.$router.push('/message')  // 登录成功，跳转到主页\r\n    },\r\n\r\n    loadNoticeData() {\r\n      list({ state: \"0\" }).then(result => {\r\n        this.NoticeData = result.data;\r\n      }).catch(err => {\r\n        console.log(\"error:\" + err)\r\n      })\r\n    },\r\n\r\n\r\n    // loadEquipmemt() {\r\n    //   // 从后端获取视频数据，这里只是示例，实际情况需要根据后端API进行调整\r\n    //   dataChange();\r\n    //   equipmentList({ ...this.form }).then(result => {\r\n    //     this.equipmentData = result.data;\r\n    //     this.sendNotice(this.equipmentData);\r\n    //   })\r\n    // },\r\n\r\n\r\n\r\n\r\n  },\r\n}\r\n</script>\r\n\r\n<style lang=\"scss\">\r\n.site-wrapper em {\r\n  color: red;\r\n}\r\n\r\n.monitoring-dashboard {\r\n  margin: 20px;\r\n}\r\n\r\n.monitoring-item {\r\n  text-align: center;\r\n}\r\n\r\n.monitoring-item h3 {\r\n  margin: 0;\r\n  padding: 10px;\r\n  background-color: #f5f7fa;\r\n}\r\n\r\n.monitoring-item .value {\r\n  font-size: 24px;\r\n  font-weight: bold;\r\n  padding: 20px;\r\n}\r\n</style>"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}