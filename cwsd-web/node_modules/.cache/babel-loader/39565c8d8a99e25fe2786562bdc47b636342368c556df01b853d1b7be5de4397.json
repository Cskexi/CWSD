{"ast":null,"code":"import { dicAddOrUpdate } from \"@/api/modules/dic\";\nconst validateTelephone = (rule, value, callback) => {\n  let reg = /^[1][3,4,5,7,8][0-9]{9}$/;\n  if (!reg.test(value)) {\n    callback(new Error(\"手机号格式错误\"));\n  } else {\n    callback();\n  }\n};\nexport default {\n  name: \"addOrEdit\",\n  props: {\n    visible: {\n      type: Boolean,\n      default: false\n    },\n    title: {\n      type: String,\n      default: \"新增\"\n    },\n    defaultFormDate: {\n      type: Object\n    }\n  },\n  data() {\n    return {\n      flag: false,\n      form: {\n        name: '',\n        value: '',\n        dictypeId: ''\n      },\n      rules: {\n        name: [{\n          required: true,\n          message: \"字典类型不能为空\"\n        }\n        // {type:\"email\",message:\"邮箱格式不正确\"}\n        ],\n        value: [{\n          required: true,\n          message: \"字典类型值不能为空\",\n          trigger: \"blur\"\n        }\n        //  {validator:validateTelephone,trigger:\"blur\"}\n        ]\n      }\n    };\n  },\n  mounted() {\n    // if(JSON.stringify(this.defaultFormDate)==\"{}\"){\n    //     this.flag = false\n    // }else{\n    this.form = JSON.parse(JSON.stringify(this.defaultFormDate));\n    //     console.log(this.form)\n    //     this.flag =true;\n    // }\n  },\n  methods: {\n    close() {\n      this.flag = false;\n      this.$emit(\"close\", this.flag);\n    },\n    submit() {\n      this.$refs.form.validate(valid => {\n        if (valid) {\n          this.form.name = this.form.value;\n          dicAddOrUpdate({\n            ...this.form\n          }).then(res => {\n            this.flag = true;\n            this.$emit(\"close\", this.flag);\n          }).catch(err => {\n            this.flag = false;\n            this.$emit(\"close\", this.flag);\n          });\n        }\n      });\n    }\n  }\n};","map":{"version":3,"names":["dicAddOrUpdate","validateTelephone","rule","value","callback","reg","test","Error","name","props","visible","type","Boolean","default","title","String","defaultFormDate","Object","data","flag","form","dictypeId","rules","required","message","trigger","mounted","JSON","parse","stringify","methods","close","$emit","submit","$refs","validate","valid","then","res","catch","err"],"sources":["src/views/dictype/module/dicAddOrEdit.vue"],"sourcesContent":["<template>\r\n    <el-dialog :title=\"title\" :visible=\"visible\" :before-close=\"close\" append-to-body>\r\n        <el-form :model=\"form\" :rules=\"rules\" ref=\"form\">\r\n            <!-- <el-form-item label=\"字典名称\" prop=\"name\">\r\n                <el-input v-model=\"form.name\" autocomplete=\"off\"></el-input>\r\n           </el-form-item>  -->\r\n            <el-form-item label=\"字典值\" prop=\"value\">\r\n\r\n                <el-input v-model=\"form.value\" autocomplete=\"off\"></el-input>\r\n            </el-form-item>\r\n        </el-form>\r\n\r\n        <div slot=\"footer\" class=\"dialog-footer\">\r\n            <el-button @click=\"close = false\">取 消</el-button>\r\n            <el-button type=\"primary\" @click=\"submit\">确 定</el-button>\r\n        </div>\r\n    </el-dialog>\r\n</template>    \r\n\r\n<script>\r\nimport { dicAddOrUpdate } from \"@/api/modules/dic\"\r\n\r\nconst validateTelephone = (rule, value, callback) => {\r\n    let reg = /^[1][3,4,5,7,8][0-9]{9}$/;\r\n    if (!reg.test(value)) {\r\n        callback(new Error(\"手机号格式错误\"));\r\n\r\n    } else {\r\n        callback();\r\n    }\r\n}\r\n\r\nexport default {\r\n    name: \"addOrEdit\",\r\n    props: {\r\n        visible: {\r\n            type: Boolean,\r\n            default: false\r\n        },\r\n        title: {\r\n            type: String,\r\n            default: \"新增\"\r\n        },\r\n        defaultFormDate: {\r\n            type: Object,\r\n        },\r\n    },\r\n    data() {\r\n        return {\r\n            flag: false,\r\n            form: {\r\n                name: '',\r\n                value: '',\r\n                dictypeId: ''\r\n            },\r\n            rules: {\r\n                name: [{ required: true, message: \"字典类型不能为空\" },\r\n                    // {type:\"email\",message:\"邮箱格式不正确\"}\r\n                ],\r\n                value: [{ required: true, message: \"字典类型值不能为空\", trigger: \"blur\" },\r\n                    //  {validator:validateTelephone,trigger:\"blur\"}\r\n                ],\r\n            }\r\n        };\r\n    },\r\n    mounted() {\r\n        // if(JSON.stringify(this.defaultFormDate)==\"{}\"){\r\n        //     this.flag = false\r\n        // }else{\r\n        this.form = JSON.parse(JSON.stringify(this.defaultFormDate))\r\n        //     console.log(this.form)\r\n        //     this.flag =true;\r\n        // }\r\n    },\r\n    methods: {\r\n        close() {\r\n            this.flag = false;\r\n            this.$emit(\"close\", this.flag)\r\n        },\r\n        submit() {\r\n            this.$refs.form.validate(valid => {\r\n                if (valid) {\r\n                    this.form.name = this.form.value;\r\n                    dicAddOrUpdate({\r\n                        ...this.form\r\n                    }).then(res => {\r\n                        this.flag = true\r\n                        this.$emit(\"close\", this.flag)\r\n                    })\r\n                        .catch(err => {\r\n                            this.flag = false\r\n                            this.$emit(\"close\", this.flag)\r\n                        })\r\n                }\r\n\r\n            })\r\n\r\n        }\r\n    }\r\n};\r\n</script>"],"mappings":"AAoBA,SAAAA,cAAA;AAEA,MAAAC,iBAAA,GAAAA,CAAAC,IAAA,EAAAC,KAAA,EAAAC,QAAA;EACA,IAAAC,GAAA;EACA,KAAAA,GAAA,CAAAC,IAAA,CAAAH,KAAA;IACAC,QAAA,KAAAG,KAAA;EAEA;IACAH,QAAA;EACA;AACA;AAEA;EACAI,IAAA;EACAC,KAAA;IACAC,OAAA;MACAC,IAAA,EAAAC,OAAA;MACAC,OAAA;IACA;IACAC,KAAA;MACAH,IAAA,EAAAI,MAAA;MACAF,OAAA;IACA;IACAG,eAAA;MACAL,IAAA,EAAAM;IACA;EACA;EACAC,KAAA;IACA;MACAC,IAAA;MACAC,IAAA;QACAZ,IAAA;QACAL,KAAA;QACAkB,SAAA;MACA;MACAC,KAAA;QACAd,IAAA;UAAAe,QAAA;UAAAC,OAAA;QAAA;QACA;QAAA,CACA;QACArB,KAAA;UAAAoB,QAAA;UAAAC,OAAA;UAAAC,OAAA;QAAA;QACA;QAAA;MAEA;IACA;EACA;EACAC,QAAA;IACA;IACA;IACA;IACA,KAAAN,IAAA,GAAAO,IAAA,CAAAC,KAAA,CAAAD,IAAA,CAAAE,SAAA,MAAAb,eAAA;IACA;IACA;IACA;EACA;EACAc,OAAA;IACAC,MAAA;MACA,KAAAZ,IAAA;MACA,KAAAa,KAAA,eAAAb,IAAA;IACA;IACAc,OAAA;MACA,KAAAC,KAAA,CAAAd,IAAA,CAAAe,QAAA,CAAAC,KAAA;QACA,IAAAA,KAAA;UACA,KAAAhB,IAAA,CAAAZ,IAAA,QAAAY,IAAA,CAAAjB,KAAA;UACAH,cAAA;YACA,QAAAoB;UACA,GAAAiB,IAAA,CAAAC,GAAA;YACA,KAAAnB,IAAA;YACA,KAAAa,KAAA,eAAAb,IAAA;UACA,GACAoB,KAAA,CAAAC,GAAA;YACA,KAAArB,IAAA;YACA,KAAAa,KAAA,eAAAb,IAAA;UACA;QACA;MAEA;IAEA;EACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}