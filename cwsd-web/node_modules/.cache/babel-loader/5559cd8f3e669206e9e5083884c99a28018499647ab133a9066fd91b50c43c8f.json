{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { save } from \"@/api/modules/notice\";\nimport addOrEdit from \"./components/AddOrEdit\";\nimport { equipmentList, dataChange } from \"@/api/modules/equipment\";\nimport { dictypeList } from \"@/api/modules/dictype\";\nimport { dicPage } from \"@/api/modules/dic\";\nexport default {\n  components: {\n    addOrEdit\n  },\n  name: 'MonitoringDashboard',\n  data() {\n    return {\n      visible: false,\n      obj: {},\n      form: {\n        name: \"\",\n        address: \"\"\n      },\n      equipmentData: [],\n      timer: null,\n      options: [],\n      searchForm: {\n        pageNum: 1,\n        pageSize: 10,\n        dictypeId: \"\"\n      },\n      noticeForm: {\n        reason: \"\",\n        equipmentId: \"\"\n      }\n    };\n  },\n  mounted() {\n    this.loadOptions();\n    this.timer = setInterval(() => this.fetchVideos(), 60000); // 每5秒更新一次数据\n    this.fetchVideos();\n  },\n  beforeDestroy() {\n    clearInterval(this.timer);\n  },\n  methods: {\n    getTextColor(item) {\n      // 假设你希望当item.value大于100时字体颜色为红色\n      if (parseInt(item.value) >= parseInt(item.cordon)) return {\n        color: 'red'\n      };else {\n        return {\n          color: 'black'\n        };\n      }\n    },\n    loadOptions() {\n      dictypeList({\n        name: \"地区\"\n      }).then(result => {\n        this.searchForm.dictypeId = result.data[0].id;\n        dicPage({\n          ...this.searchForm\n        }).then(result => {\n          this.options = result.data.records;\n          this.options.push({\n            label: \"全部\",\n            name: \"全部\",\n            value: \"\"\n          });\n        }).catch(err => {\n          console.log(\"error:\" + err);\n        });\n      }).catch(err => {\n        console.log(\"error:\" + err);\n      });\n    },\n    editMonitor(row) {\n      this.obj = row;\n      this.title = \"编辑设备\";\n      this.visible = true;\n    },\n    addMonitor() {\n      this.title = \"添加新设备\";\n      this.visible = true;\n      this.obj = {};\n    },\n    closeFather(val) {\n      this.visible = false;\n      if (val) {\n        this.fetchVideos();\n      }\n    },\n    fetchVideos() {\n      // 从后端获取视频数据，这里只是示例，实际情况需要根据后端API进行调整\n      dataChange();\n      equipmentList({\n        ...this.form\n      }).then(result => {\n        this.equipmentData = result.data;\n        this.sendNotice(this.equipmentData);\n      });\n    },\n    sendNotice(a) {\n      a.forEach(item => {\n        if (parseInt(item.value) >= parseInt(item.cordon)) {\n          this.noticeForm.equipmentId = item.id;\n          this.noticeForm.reason = \"警告：\" + \"当前\" + item.name + \"数值已达到\" + item.value + item.flats;\n          save({\n            ...this.noticeForm\n          }).then(result => {\n            console.log(this.noticeForm);\n          });\n        }\n      });\n    }\n  }\n};","map":{"version":3,"names":["save","addOrEdit","equipmentList","dataChange","dictypeList","dicPage","components","name","data","visible","obj","form","address","equipmentData","timer","options","searchForm","pageNum","pageSize","dictypeId","noticeForm","reason","equipmentId","mounted","loadOptions","setInterval","fetchVideos","beforeDestroy","clearInterval","methods","getTextColor","item","parseInt","value","cordon","color","then","result","id","records","push","label","catch","err","console","log","editMonitor","row","title","addMonitor","closeFather","val","sendNotice","a","forEach","flats"],"sources":["src/views/dashboard/index.vue"],"sourcesContent":["<!-- src/components/MonitoringDashboard.vue -->\r\n<template>\r\n  <div class=\"monitoring-dashboard\">\r\n    <el-row style=\"margin-bottom: 20px;\">\r\n      <el-col :span=\"3\">\r\n        <el-button type=\"primary\" @click=\"addMonitor\">新增</el-button>\r\n      </el-col>\r\n      <el-col :span=\"3\">\r\n        <el-select @change=\"fetchVideos()\" v-model=\"form.address\" placeholder=\"请选择\">\r\n          <el-option v-for=\"item in options\" :key=\"item.value\" :label=\"item.name\" :value=\"item.value\">\r\n          </el-option>\r\n        </el-select>\r\n      </el-col>\r\n    </el-row>\r\n\r\n\r\n    <el-row :gutter=\"24\">\r\n\r\n      <el-col :span=\"6\" v-for=\"item in  equipmentData\" :key=\"item.id\">\r\n        <el-card style=\"margin-bottom: 20px;\">\r\n          <div class=\"monitoring-item\">\r\n            <h3>{{ item.name }}</h3>\r\n            <p class=\"value\" :style=\"getTextColor(item)\">{{ item.value }}{{ item.flats }}</p>\r\n          </div>\r\n          <el-button type=\"primary\" @click=\"editMonitor(item)\" style=\" float:right;margin-bottom: 20px; \">编辑</el-button>\r\n        </el-card>\r\n      </el-col>\r\n\r\n    </el-row>\r\n\r\n    <addOrEdit v-if=\"visible\" :defaultFormDate=\"obj\" :title=\"title\" :visible=\"visible\" @close=\"closeFather\"></addOrEdit>\r\n  </div>\r\n</template>\r\n  \r\n<script>\r\nimport { save } from \"@/api/modules/notice\"\r\nimport addOrEdit from \"./components/AddOrEdit\"\r\nimport { equipmentList, dataChange } from \"@/api/modules/equipment\"\r\nimport { dictypeList } from \"@/api/modules/dictype\"\r\nimport { dicPage } from \"@/api/modules/dic\"\r\nexport default {\r\n  components: {\r\n    addOrEdit\r\n  },\r\n  name: 'MonitoringDashboard',\r\n  data() {\r\n    return {\r\n      visible: false,\r\n      obj: {},\r\n      form: {\r\n        name: \"\",\r\n        address: \"\"\r\n      },\r\n      equipmentData: [],\r\n      timer: null,\r\n\r\n      options: [],\r\n      searchForm: {\r\n        pageNum: 1,\r\n        pageSize: 10,\r\n        dictypeId: \"\",\r\n      },\r\n      noticeForm: {\r\n        reason: \"\",\r\n        equipmentId: \"\",\r\n      },\r\n    };\r\n  },\r\n  mounted() {\r\n    this.loadOptions()\r\n    this.timer = setInterval(() => this.fetchVideos(), 60000); // 每5秒更新一次数据\r\n    this.fetchVideos()\r\n  },\r\n  beforeDestroy() {\r\n    clearInterval(this.timer);\r\n  },\r\n  methods: {\r\n\r\n    getTextColor(item) {\r\n      // 假设你希望当item.value大于100时字体颜色为红色\r\n      if (parseInt(item.value) >= parseInt(item.cordon))\r\n        return { color: 'red' }\r\n      else {\r\n        return { color: 'black' };\r\n      }\r\n    },\r\n    loadOptions() {\r\n      dictypeList({ name: \"地区\" }).then(result => {\r\n        this.searchForm.dictypeId = result.data[0].id;\r\n        dicPage({\r\n          ...this.searchForm\r\n        }).then(result => {\r\n          this.options = result.data.records;\r\n          this.options.push({\r\n            label: \"全部\",\r\n            name: \"全部\",\r\n            value: \"\",\r\n          });\r\n        }).catch(err => {\r\n          console.log(\"error:\" + err)\r\n        })\r\n\r\n      }).catch(err => {\r\n        console.log(\"error:\" + err)\r\n      })\r\n    },\r\n    editMonitor(row) {\r\n      this.obj = row;\r\n      this.title = \"编辑设备\"\r\n      this.visible = true;\r\n    },\r\n    addMonitor() {\r\n      this.title = \"添加新设备\"\r\n      this.visible = true;\r\n      this.obj = {};\r\n    },\r\n\r\n    closeFather(val) {\r\n      this.visible = false\r\n      if (val) {\r\n        this.fetchVideos();\r\n      }\r\n    },\r\n\r\n    fetchVideos() {\r\n      // 从后端获取视频数据，这里只是示例，实际情况需要根据后端API进行调整\r\n      dataChange();\r\n      equipmentList({ ...this.form }).then(result => {\r\n        this.equipmentData = result.data;\r\n        this.sendNotice(this.equipmentData);\r\n      })\r\n    },\r\n\r\n    sendNotice(a) {\r\n\r\n      a.forEach(item => {\r\n        if (parseInt(item.value) >= parseInt(item.cordon)) {\r\n          this.noticeForm.equipmentId = item.id;\r\n          this.noticeForm.reason = \"警告：\" + \"当前\" + item.name + \"数值已达到\" + item.value + item.flats;\r\n          save({ ...this.noticeForm }).then(result => {\r\n            console.log(this.noticeForm)\r\n          })\r\n        }\r\n      })\r\n    }\r\n\r\n  },\r\n\r\n\r\n};\r\n</script>\r\n  \r\n<style scoped>\r\n.monitoring-dashboard {\r\n  margin: 20px;\r\n}\r\n\r\n.monitoring-item {\r\n  text-align: center;\r\n}\r\n\r\n.monitoring-item h3 {\r\n  margin: 0;\r\n  padding: 10px;\r\n  background-color: #f5f7fa;\r\n}\r\n\r\n.monitoring-item .value {\r\n  font-size: 24px;\r\n  font-weight: bold;\r\n  padding: 20px;\r\n}\r\n</style>"],"mappings":";AAmCA,SAAAA,IAAA;AACA,OAAAC,SAAA;AACA,SAAAC,aAAA,EAAAC,UAAA;AACA,SAAAC,WAAA;AACA,SAAAC,OAAA;AACA;EACAC,UAAA;IACAL;EACA;EACAM,IAAA;EACAC,KAAA;IACA;MACAC,OAAA;MACAC,GAAA;MACAC,IAAA;QACAJ,IAAA;QACAK,OAAA;MACA;MACAC,aAAA;MACAC,KAAA;MAEAC,OAAA;MACAC,UAAA;QACAC,OAAA;QACAC,QAAA;QACAC,SAAA;MACA;MACAC,UAAA;QACAC,MAAA;QACAC,WAAA;MACA;IACA;EACA;EACAC,QAAA;IACA,KAAAC,WAAA;IACA,KAAAV,KAAA,GAAAW,WAAA,YAAAC,WAAA;IACA,KAAAA,WAAA;EACA;EACAC,cAAA;IACAC,aAAA,MAAAd,KAAA;EACA;EACAe,OAAA;IAEAC,aAAAC,IAAA;MACA;MACA,IAAAC,QAAA,CAAAD,IAAA,CAAAE,KAAA,KAAAD,QAAA,CAAAD,IAAA,CAAAG,MAAA,GACA;QAAAC,KAAA;MAAA,OACA;QACA;UAAAA,KAAA;QAAA;MACA;IACA;IACAX,YAAA;MACApB,WAAA;QAAAG,IAAA;MAAA,GAAA6B,IAAA,CAAAC,MAAA;QACA,KAAArB,UAAA,CAAAG,SAAA,GAAAkB,MAAA,CAAA7B,IAAA,IAAA8B,EAAA;QACAjC,OAAA;UACA,QAAAW;QACA,GAAAoB,IAAA,CAAAC,MAAA;UACA,KAAAtB,OAAA,GAAAsB,MAAA,CAAA7B,IAAA,CAAA+B,OAAA;UACA,KAAAxB,OAAA,CAAAyB,IAAA;YACAC,KAAA;YACAlC,IAAA;YACA0B,KAAA;UACA;QACA,GAAAS,KAAA,CAAAC,GAAA;UACAC,OAAA,CAAAC,GAAA,YAAAF,GAAA;QACA;MAEA,GAAAD,KAAA,CAAAC,GAAA;QACAC,OAAA,CAAAC,GAAA,YAAAF,GAAA;MACA;IACA;IACAG,YAAAC,GAAA;MACA,KAAArC,GAAA,GAAAqC,GAAA;MACA,KAAAC,KAAA;MACA,KAAAvC,OAAA;IACA;IACAwC,WAAA;MACA,KAAAD,KAAA;MACA,KAAAvC,OAAA;MACA,KAAAC,GAAA;IACA;IAEAwC,YAAAC,GAAA;MACA,KAAA1C,OAAA;MACA,IAAA0C,GAAA;QACA,KAAAzB,WAAA;MACA;IACA;IAEAA,YAAA;MACA;MACAvB,UAAA;MACAD,aAAA;QAAA,QAAAS;MAAA,GAAAyB,IAAA,CAAAC,MAAA;QACA,KAAAxB,aAAA,GAAAwB,MAAA,CAAA7B,IAAA;QACA,KAAA4C,UAAA,MAAAvC,aAAA;MACA;IACA;IAEAuC,WAAAC,CAAA;MAEAA,CAAA,CAAAC,OAAA,CAAAvB,IAAA;QACA,IAAAC,QAAA,CAAAD,IAAA,CAAAE,KAAA,KAAAD,QAAA,CAAAD,IAAA,CAAAG,MAAA;UACA,KAAAd,UAAA,CAAAE,WAAA,GAAAS,IAAA,CAAAO,EAAA;UACA,KAAAlB,UAAA,CAAAC,MAAA,kBAAAU,IAAA,CAAAxB,IAAA,aAAAwB,IAAA,CAAAE,KAAA,GAAAF,IAAA,CAAAwB,KAAA;UACAvD,IAAA;YAAA,QAAAoB;UAAA,GAAAgB,IAAA,CAAAC,MAAA;YACAO,OAAA,CAAAC,GAAA,MAAAzB,UAAA;UACA;QACA;MACA;IACA;EAEA;AAGA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}